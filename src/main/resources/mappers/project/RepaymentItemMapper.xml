<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.small.mapper.project.RepaymentItemMapper">
    <select id="findByLoanCustomerDetails" resultType="com.small.vo.loan.LoanCustomerDetailsVo" parameterType="Long">
        select
          interest + principal               as monthlyPayment,
          principal_balance + principal      as balancePrincipal,
          DATE_FORMAT(plan_repay_date, '%e') as withholdingDay
        from t_repayment_item
        where project_id = #{projectId} and repayment_status in (1, 3)
        order by id
        limit 1
    </select>

    <select id="getRemind" resultType="com.small.vo.repayment.RemindVo"
            parameterType="com.small.dto.repayment.RemindDto">
        SELECT
        s.projectId as projectId,
        r.plan_repay_date        AS planRepayDate,
        r.issue                  AS issue,
        s.departMentName         AS departmentName,
        p.NAME                   AS customerName,
        r.interest + r.principal AS monthlyRepayment,
        p.cellphone_a            AS customerPhone,
        p.id                     AS personId,
        s.maintenanceId,
        tp.project_overdue_day as overdueDay,
        if(p.sex=312,'男','女') as sex,
        e.delay_not_money as repaymentAmount
        FROM t_repayment_item r STRAIGHT_JOIN sl_smallloan_project s ON s.projectId = r.project_id
        STRAIGHT_JOIN cs_person p ON s.oppositeID = p.id
        LEFT join t_overdue_item toi on r.id = toi.repayment_item_id
        LEFT JOIN t_overdue_project tp ON r.project_id = tp.id
        left join (select ROUND(sum(delay_not_money),2) as delay_not_money,project_id from t_repayment_extension where delay_not_money>0 group by project_id) as e
        on e.project_id = r.project_id
        <where>
            and r.repayment_status IN (1,3)

            <if test="startDateContrast &gt; 0">
                AND r.plan_repay_date = DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test="startDateContrast &lt;= 0 and startDateContrast &gt; -7 ">
                AND r.plan_repay_date BETWEEN DATE_SUB(DATE_FORMAT(#{startDate},'%Y-%m-%d'), INTERVAL #{repaymentDate} DAY) AND DATE_FORMAT(now(),'%Y-%m-%d')
            </if>
            <if test="startDateContrast &lt;= -7">
                AND r.plan_repay_date BETWEEN DATE_SUB(DATE_FORMAT(#{startDate},'%Y-%m-%d'), INTERVAL #{repaymentDate} DAY) AND
                DATE_ADD(date_format(#{startDate},'%Y-%m-%d'), INTERVAL #{repaymentDate} DAY)
            </if>

            <if test="overdueDayBegin == null and overdueDayEnd != null">
                AND tp.project_overdue_day = #{overdueDayEnd}
            </if>
            <if test="overdueDayBegin != null and overdueDayEnd != null">
                <choose>
                    <when test="overdueDayBegin == 0">
                        AND (tp.project_overdue_day BETWEEN #{overdueDayBegin} AND #{overdueDayEnd} or
                        tp.project_overdue_day is null)
                    </when>
                    <otherwise>
                        AND tp.project_overdue_day BETWEEN #{overdueDayBegin} AND #{overdueDayEnd}
                    </otherwise>
                </choose>
            </if>
            <if test="personName!=null and personName!=''">
                AND p.name like '${personName}%'
            </if>
            <if test="orgIds!=null and orgIds.size()>0">
                and s.departId in
                <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
                    #{orgId}
                </foreach>
            </if>
        </where>
        order by r.plan_repay_date desc
    </select>
</mapper>