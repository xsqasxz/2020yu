<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.small.mapper.project.ProjectMapper" >
    <select id="selectByLoan" resultType="com.small.vo.loan.LoanVo" parameterType="com.small.dto.loan.LoanDto">
        select
          s.projectId,
          s.projectNumber,
          p.name as customerName,
          s.departMentName,
          s.appUserName,
          s.teamManagerName,
          s.maintenanceId,
          op.project_overdue_day as projectOverdueDay,
          op.sum_not_paid_amount as sumNotPaidAmount,
          op.last_follow_up_user_id as lastFollowUpUserId
        from t_overdue_project op inner join sl_smallloan_project s on op.id = s.projectId inner join cs_person p on s.oppositeID = p.id
        <where>
            <if test="customerName!=null and customerName!=''">
                and p.name like '%${customerName}%'
            </if>
            <if test="orgIds!=null and orgIds.size()>0">
                and s.departId in
                <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
                    #{orgId}
                </foreach>
            </if>
            <choose>
                <when test="projectOverdueDayStart != null and projectOverdueDayEnd != null">
                    and op.project_overdue_day BETWEEN #{projectOverdueDayStart} AND #{projectOverdueDayEnd}
                </when>
                <otherwise>
                    <if test="projectOverdueDayStart != null">
                        and op.project_overdue_day &gt; #{projectOverdueDayStart}
                    </if>
                    <if test="projectOverdueDayEnd != null">
                        and op.project_overdue_day &lt; #{projectOverdueDayEnd}
                    </if>
                </otherwise>
            </choose>
            <if test="projectStatus != null">
                and s.projectStatus = #{projectStatus}
            </if>
            <if test="loanType != null and loanType == 'head'">
                and (op.follow_up_type='RECYCLE'
                  OR (op.follow_up_type='SELF'
                  AND NOT EXISTS(SELECT 1 FROM (SELECT oe.id FROM t_overdue_entrust AS oe) AS oe WHERE oe.id = op.entrust_id)))
            </if>
            <if test="loanType != null and loanType == 'branch'">
                and (op.follow_up_type='SELF' OR op.follow_up_type='RECYCLE')
            </if>
            <if test="loanType != null and loanType == 'recycle'">
                and op.follow_up_type='SELF'
                AND EXISTS(SELECT 1 FROM (SELECT oe.id FROM t_overdue_entrust AS oe) AS oe WHERE oe.id = op.entrust_id)
            </if>
            <if test="followUpUserId!=null and followUpUserId.size()>0">
                AND (
                op.follow_up_user_id in
                <foreach collection="followUpUserId" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="teamManagerId!=null and teamManagerId.size()>0">   <!--维护人+ 跟进人-->
                    OR s.maintenanceId in
                    <foreach collection="teamManagerId" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="appUserManagerId!=null and appUserManagerId.size()>0">  <!--团队经理+ 跟进人-->
                    OR s.appUserId in
                    <foreach collection="appUserManagerId" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="organizationId!=null and organizationId.size()>0">
                    OR s.departId in
                    <foreach collection="organizationId" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                )
            </if>
        </where>
    </select>

    <select id="findByLoanCustomerDetails" resultType="com.small.vo.loan.LoanCustomerDetailsVo" parameterType="Long">
        select
          p.id             as personId,
          p.name           as customerName,
          p.cardnumber_a   as cardnumber,
          s.departMentName as departMentName,
          s.projectMoney as projectMoney,
          s.actualMoney as actualMoney,
          s.productId as productId,
          s.startdate as startDate,
          s.payIntentPeriod as payIntentPeriod,
          o.happened_overdue-1 as payOffCount,
          o.earliest_overdue_date as earliestOverdueDate,
          o.sum_not_paid_amount as sumNotPaidAmount,
          o.follow_State as followState,
          o.case_state as caseState,
          o.false_Information as falseInformation,
          o.case_state_details as caseStateDetails
        from sl_smallloan_project s inner join cs_person p on s.oppositeID = p.id
        left join t_overdue_project o on s.projectId = o.id
        <where>
            <if test="projectId != null">
                and s.projectId = #{projectId}
            </if>
        </where>
    </select>
</mapper>